# from PyQt6.QtWidgets import (
#     QApplication, QWidget, QVBoxLayout, QLabel, QLineEdit, QPushButton, QMessageBox
# )
# from PyQt6.QtGui import QFont
# from PyQt6.QtCore import Qt
# import sys
#
# from db_functions import check_user_exists
#
#
# class SpotifyLogin(QWidget):
#     def __init__(self, connection):
#         super().__init__()
#         self.connection = connection  # Save the database connection
#         self.init_ui()
#
#     def init_ui(self):
#         # Window setup
#         self.setWindowTitle("Spotify Login")
#         self.setFixedSize(400, 500)
#
#         # Main layout
#         main_layout = QVBoxLayout()
#         main_layout.setAlignment(Qt.AlignmentFlag.AlignCenter)
#
#         # Logo or Title
#         logo_label = QLabel("Spotify")
#         logo_label.setFont(QFont("Arial", 24, QFont.Weight.Bold))
#         logo_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
#
#         # Username input
#         self.username_input = QLineEdit()  # Define as instance variable
#         self.username_input.setPlaceholderText("Email address")
#         self.username_input.setFixedHeight(40)
#
#         # Password input
#         self.password_input = QLineEdit()  # Define as instance variable
#         self.password_input.setPlaceholderText("Password")
#         self.password_input.setEchoMode(QLineEdit.EchoMode.Password)
#         self.password_input.setFixedHeight(40)
#
#         # Login button
#         login_button = QPushButton("LOG IN")
#         login_button.setFixedHeight(40)
#         login_button.setStyleSheet("""
#             background-color: #1DB954;
#             color: white;
#             border: none;
#             border-radius: 20px;
#             font-size: 16px;
#         """)
#         login_button.clicked.connect(self.handle_login)  # Connect button click to the handler
#
#         # Link for forgotten password
#         forgot_password_label = QLabel('<a href="#">Forgot your password?</a>')
#         forgot_password_label.setOpenExternalLinks(True)
#         forgot_password_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
#
#         # Add widgets to the layout
#         main_layout.addWidget(logo_label)
#         main_layout.addSpacing(20)
#         main_layout.addWidget(self.username_input)  # Use instance variable
#         main_layout.addWidget(self.password_input)  # Use instance variable
#         main_layout.addSpacing(20)
#         main_layout.addWidget(login_button)
#         main_layout.addSpacing(10)
#         main_layout.addWidget(forgot_password_label)
#
#         # Set layout to the window
#         self.setLayout(main_layout)
#
#     def handle_login(self):
#         # Retrieve user input
#         mail = self.username_input.text().strip()  # Access instance variable
#         password = self.password_input.text().strip()  # Access instance variable
#
#         # Check if fields are not empty
#         if not mail or not password:
#             QMessageBox.warning(self, "Input Error", "Email and Password cannot be empty!")
#             return
#
#         # Call the check_user_exists function
#         if check_user_exists(self.connection, mail, password):
#             QMessageBox.information(self, "Login Successful", "Welcome to Spotify!")
#         else:
#             QMessageBox.critical(self, "Login Failed", "Invalid email or password!")
#
#
# # Run the application
# if __name__ == "__main__":
#     # Replace None with an actual database connection
#     connection = None
#     app = QApplication(sys.argv)
#     window = SpotifyLogin(connection)
#     window.show()
#     sys.exit(app.exec())